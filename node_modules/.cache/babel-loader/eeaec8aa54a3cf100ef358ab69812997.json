{"ast":null,"code":"var _jsxFileName = \"/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/App.js\";\nimport React from 'react'; // import {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport * as Lists from './data/todoListData';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: []\n    };\n  }\n\n  componentWillMount() {\n    const taskLists = [];\n\n    for (const key in Lists) {\n      taskLists.push(Lists[key]);\n    }\n\n    this.setState({\n      lists: taskLists\n    });\n  }\n\n  handleAddList(list) {} // // figure out way to add new tasklist if empty one at end is filled up\n  // componentWillUnmount() {\n  //     if (!this.state.emptyPresent) {\n  //         this.setState(prevState => {\n  //             const addedEmpty = prevState.lists.concat({\n  //                 name: \"Empty List\",\n  //                 numTasks: 0,\n  //                 data: [],\n  //             });\n  //             return ({\n  //                 emptyPresent: true,\n  //                 lists: addedEmpty,\n  //             })\n  //         })\n  //     }\n  //     if (this.state.lists[this.state.lists.length - 1].data !== []) {\n  //         this.setState({emptyPresent: false});\n  //     }\n  // }\n\n\n  render() {\n    const outputLists = this.state.lists.map(list => /*#__PURE__*/React.createElement(TaskList, {\n      key: list.name,\n      numTasks: list.numTasks,\n      data: list.data,\n      title: list.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    })); // array of components\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bkgrnd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, outputLists)));\n  }\n\n}","map":{"version":3,"sources":["/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/App.js"],"names":["React","Header","TaskList","Lists","App","Component","constructor","props","state","lists","componentWillMount","taskLists","key","push","setState","handleAddList","list","render","outputLists","map","name","numTasks","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,qBAAvB;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,SAAS,GAAG,EAAlB;;AAEA,SAAK,MAAMC,GAAX,IAAkBT,KAAlB,EAAyB;AACrBQ,MAAAA,SAAS,CAACE,IAAV,CAAeV,KAAK,CAACS,GAAD,CAApB;AACH;;AAED,SAAKE,QAAL,CAAc;AACVL,MAAAA,KAAK,EAAEE;AADG,KAAd;AAGH;;AAEDI,EAAAA,aAAa,CAACC,IAAD,EAAO,CAEnB,CAtB4C,CAwB7C;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGAC,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,KACCV,KADD,CAECC,KAFD,CAGCU,GAHD,CAICH,IAAI,iBACD,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACI,IADd;AAEI,MAAA,QAAQ,EAAEJ,IAAI,CAACK,QAFnB;AAGI,MAAA,IAAI,EAAEL,IAAI,CAACM,IAHf;AAII,MAAA,KAAK,EAAEN,IAAI,CAACI,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAApB,CADK,CAU8C;;AAGnD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,WADL,CADJ,CAFJ,CADJ;AAUH;;AAxE4C","sourcesContent":["import React from 'react';\n// import {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport * as Lists from './data/todoListData';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lists: [],\n        }\n    }\n\n    componentWillMount() {\n        const taskLists = [];\n\n        for (const key in Lists) {\n            taskLists.push(Lists[key]);\n        }\n\n        this.setState({\n            lists: taskLists,\n        });\n    }\n\n    handleAddList(list) {\n\n    }\n\n    // // figure out way to add new tasklist if empty one at end is filled up\n\n    // componentWillUnmount() {\n\n    //     if (!this.state.emptyPresent) {\n    //         this.setState(prevState => {\n    //             const addedEmpty = prevState.lists.concat({\n    //                 name: \"Empty List\",\n    //                 numTasks: 0,\n    //                 data: [],\n    //             });\n\n    //             return ({\n    //                 emptyPresent: true,\n    //                 lists: addedEmpty,\n    //             })\n    //         })\n    //     }\n\n    //     if (this.state.lists[this.state.lists.length - 1].data !== []) {\n    //         this.setState({emptyPresent: false});\n    //     }\n    // }\n\n\n    render() {\n        const outputLists = this\n                            .state\n                            .lists\n                            .map\n                            (list => \n                                <TaskList \n                                    key={list.name} \n                                    numTasks={list.numTasks} \n                                    data={list.data} \n                                    title={list.name} />); // array of components\n\n\n        return (\n            <div>\n                <Header />\n                <div className=\"bkgrnd\">\n                    <div className=\"task-view\">\n                        {outputLists}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}