{"ast":null,"code":"var _jsxFileName = \"/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/App.js\";\nimport React from 'react'; // import {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport * as Lists from './data/todoListData';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emptyPresent: false,\n      lists: []\n    };\n  }\n\n  componentWillMount() {\n    const taskLists = [];\n\n    for (const key in Lists) {\n      taskLists.push(Lists[key]);\n    }\n\n    taskLists.push({\n      name: \"Empty List\",\n      numTasks: 0,\n      data: []\n    });\n    this.setState({\n      emptyPresent: true,\n      lists: taskLists\n    });\n  }\n\n  componentWillUpdate() {\n    if (!emptyPresent) {\n      this.setState(prevState => {\n        const addedEmpty = prevState.lists.concat({\n          name: \"Empty List\",\n          numTasks: 0,\n          data: []\n        });\n        return {\n          emptyPresent: true,\n          lists: addedEmpty\n        };\n      });\n    }\n  }\n\n  render() {\n    const outputLists = this.state.lists.map(list => /*#__PURE__*/React.createElement(TaskList, {\n      key: list.name,\n      numTasks: list.numTasks,\n      data: list.data,\n      title: list.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    })); // array of components\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bkgrnd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, outputLists)));\n  }\n\n}","map":{"version":3,"sources":["/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/App.js"],"names":["React","Header","TaskList","Lists","App","Component","constructor","props","state","emptyPresent","lists","componentWillMount","taskLists","key","push","name","numTasks","data","setState","componentWillUpdate","prevState","addedEmpty","concat","render","outputLists","map","list"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,qBAAvB;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,KADL;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,SAAS,GAAG,EAAlB;;AAEA,SAAK,MAAMC,GAAX,IAAkBV,KAAlB,EAAyB;AACrBS,MAAAA,SAAS,CAACE,IAAV,CAAeX,KAAK,CAACU,GAAD,CAApB;AACH;;AAEDD,IAAAA,SAAS,CAACE,IAAV,CAAe;AACXC,MAAAA,IAAI,EAAE,YADK;AAEXC,MAAAA,QAAQ,EAAE,CAFC;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAf;AAMA,SAAKC,QAAL,CAAc;AACVT,MAAAA,YAAY,EAAE,IADJ;AAEVC,MAAAA,KAAK,EAAEE;AAFG,KAAd;AAKH;;AAEDO,EAAAA,mBAAmB,GAAG;AAClB,QAAI,CAACV,YAAL,EAAmB;AACf,WAAKS,QAAL,CAAcE,SAAS,IAAI;AACvB,cAAMC,UAAU,GAAGD,SAAS,CAACV,KAAV,CAAgBY,MAAhB,CAAuB;AACtCP,UAAAA,IAAI,EAAE,YADgC;AAEtCC,UAAAA,QAAQ,EAAE,CAF4B;AAGtCC,UAAAA,IAAI,EAAE;AAHgC,SAAvB,CAAnB;AAMA,eAAQ;AACJR,UAAAA,YAAY,EAAE,IADV;AAEJC,UAAAA,KAAK,EAAEW;AAFH,SAAR;AAIH,OAXD;AAYH;AACJ;;AAGDE,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,KACChB,KADD,CAECE,KAFD,CAGCe,GAHD,CAICC,IAAI,iBACD,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACX,IADd;AAEI,MAAA,QAAQ,EAAEW,IAAI,CAACV,QAFnB;AAGI,MAAA,IAAI,EAAEU,IAAI,CAACT,IAHf;AAII,MAAA,KAAK,EAAES,IAAI,CAACX,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAApB,CADK,CAU8C;;AAGnD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKS,WADL,CADJ,CAFJ,CADJ;AAUH;;AAtE4C","sourcesContent":["import React from 'react';\n// import {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport * as Lists from './data/todoListData';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emptyPresent: false,\n            lists: [],\n        }\n    }\n\n    componentWillMount() {\n        const taskLists = [];\n\n        for (const key in Lists) {\n            taskLists.push(Lists[key]);\n        }\n\n        taskLists.push({\n            name: \"Empty List\",\n            numTasks: 0,\n            data: [],\n        });\n\n        this.setState({\n            emptyPresent: true,\n            lists: taskLists,\n        });\n        \n    }\n\n    componentWillUpdate() {\n        if (!emptyPresent) {\n            this.setState(prevState => {\n                const addedEmpty = prevState.lists.concat({\n                    name: \"Empty List\",\n                    numTasks: 0,\n                    data: [],\n                });\n\n                return ({\n                    emptyPresent: true,\n                    lists: addedEmpty,\n                })\n            })\n        }\n    }\n\n\n    render() {\n        const outputLists = this\n                            .state\n                            .lists\n                            .map\n                            (list => \n                                <TaskList \n                                    key={list.name} \n                                    numTasks={list.numTasks} \n                                    data={list.data} \n                                    title={list.name} />); // array of components\n\n\n        return (\n            <div>\n                <Header />\n                <div className=\"bkgrnd\">\n                    <div className=\"task-view\">\n                        {outputLists}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}