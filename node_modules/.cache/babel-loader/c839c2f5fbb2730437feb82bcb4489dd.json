{"ast":null,"code":"var _jsxFileName = \"/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/components/TaskList.js\";\nimport React from 'react';\nimport TodoItem from './TodoItem';\nimport FontAwesome from 'react-fontawesome';\nimport { Spring } from 'react-spring/renderprops';\nimport '../css/taskList.css';\nexport default class TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskValue: '',\n      title: this.props.title,\n      titleValue: this.props.title,\n      editTitle: this.props.editTitle,\n      numTasks: this.props.numTasks,\n      todos: this.props.data,\n      addActive: false\n    };\n    this.handleCompleteAdd = this.handleCompleteAdd.bind(this);\n    this.handleAddTask = this.handleAddTask.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.willEditTitle = this.willEditTitle.bind(this);\n    this.handleEditTitle = this.handleEditTitle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayNewTask = this.displayNewTask.bind(this);\n  }\n\n  handleCompleteAdd(id) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n      return {\n        todos: updatedTodos\n      };\n    });\n  }\n\n  handleChangeValue(event) {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    type === checked ? this.setState({\n      [name]: checked\n    }) : this.setState({\n      [name]: value\n    });\n  }\n\n  willEditTitle() {\n    this.setState({\n      editTitle: true\n    });\n  }\n\n  handleEditTitle() {\n    this.setState(prevState => {\n      return {\n        title: prevState.titleValue,\n        editTitle: false\n      };\n    });\n  }\n\n  handleAddTask(task) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.concat({\n        id: prevState.numTasks + 1,\n        text: prevState.taskValue,\n        completed: false\n      });\n      return {\n        taskValue: '',\n        title: prevState.title,\n        numTasks: prevState.numTasks + 1,\n        todos: updatedTodos,\n        addActive: prevState.addActive\n      };\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  displayNewTask() {\n    this.setState(prevState => {\n      return {\n        addActive: !prevState.addActive\n      };\n    });\n  }\n\n  render() {\n    const todoList = this.state.todos.map(task => /*#__PURE__*/React.createElement(TodoItem, {\n      key: task.id,\n      task: task,\n      handleChange: this.handleCompleteAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Spring, {\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, enter => /*#__PURE__*/React.createElement(\"div\", {\n      style: enter,\n      className: \"task-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesome, {\n      name: \"remove\",\n      id: \"removeIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, this.state.editTitle ? /*#__PURE__*/React.createElement(\"form\", {\n      id: \"list-form\",\n      name: \"titleValue\",\n      className: \"input-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter new title...\",\n      name: \"titleValue\",\n      maxLength: \"15\",\n      onChange: this.handleChangeValue,\n      value: this.state.titleValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.handleEditTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesome, {\n      name: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }))) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, this.state.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.willEditTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesome, {\n      name: \"edit\",\n      id: \"editIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }))), todoList, this.state.addActive ? /*#__PURE__*/React.createElement(\"form\", {\n      id: \"task-form\",\n      name: \"task\",\n      className: \"input-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter new task...\",\n      name: \"taskValue\",\n      onChange: this.handleChangeValue,\n      value: this.state.taskValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: () => {\n        this.handleAddTask();\n        this.displayNewTask();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesome, {\n      name: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }\n    }))) : null, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add-task\",\n      onClick: this.displayNewTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, \"+ New Task\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/components/TaskList.js"],"names":["React","TodoItem","FontAwesome","Spring","TaskList","Component","constructor","props","state","taskValue","title","titleValue","editTitle","numTasks","todos","data","addActive","handleCompleteAdd","bind","handleAddTask","handleChangeValue","willEditTitle","handleEditTitle","handleSubmit","displayNewTask","id","setState","prevState","updatedTodos","map","todo","completed","event","name","value","type","checked","target","task","concat","text","preventDefault","render","todoList","opacity","enter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoItem from './TodoItem';\nimport FontAwesome from 'react-fontawesome';\nimport {Spring} from 'react-spring/renderprops'\nimport '../css/taskList.css'\n\n\nexport default class TaskList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskValue: '',\n            title: this.props.title,\n            titleValue: this.props.title,\n            editTitle: this.props.editTitle,\n            numTasks: this.props.numTasks,\n            todos: this.props.data,\n            addActive: false,\n        }; \n        this.handleCompleteAdd = this.handleCompleteAdd.bind(this);\n        this.handleAddTask = this.handleAddTask.bind(this);\n        this.handleChangeValue = this.handleChangeValue.bind(this);\n        this.willEditTitle = this.willEditTitle.bind(this);\n        this.handleEditTitle = this.handleEditTitle.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.displayNewTask = this.displayNewTask.bind(this);\n    }\n\n    handleCompleteAdd(id) {\n        this.setState(prevState => {\n            const updatedTodos = prevState.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n\n                return todo;\n            });\n\n            return {\n                todos: updatedTodos,\n            };\n        });\n    }\n\n    handleChangeValue(event) {\n        const { name, value, type, checked } = event.target;\n        type === checked \n            ? this.setState({ \n            [name]: checked\n        })\n        :\n        this.setState({ \n            [name]: value\n        })\n    }\n\n    willEditTitle() {\n        this.setState({\n            editTitle: true,\n        });\n    }\n\n    handleEditTitle() {\n        this.setState(prevState => {\n            return {\n                title: prevState.titleValue,\n                editTitle: false,\n            }\n        });\n    }\n\n\n    handleAddTask(task) {\n        this.setState(prevState => {\n            const updatedTodos = prevState.todos.concat({\n                id: prevState.numTasks + 1,\n                text: prevState.taskValue,\n                completed: false,\n            });\n\n            return {\n                taskValue: '',\n                title: prevState.title,\n                numTasks: prevState.numTasks + 1,\n                todos: updatedTodos,\n                addActive: prevState.addActive,\n            }\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    displayNewTask() {\n        this.setState(prevState => {\n            return {\n                addActive: !prevState.addActive,\n            }\n        })\n    }\n\n    render() {\n        const todoList = this.state.todos.map(task => \n            <TodoItem \n                key={task.id} \n                task={task} \n                handleChange={this.handleCompleteAdd} \n            />);\n\n        return (\n            <Spring\n                from={{\n                    opacity: 0,\n                }}\n                to={{\n                    opacity: 1,\n                }}>\n                {enter => \n                <div style={enter} className=\"task-list\">\n\n                    <div className=\"delete-list\">\n                        <button>\n                            <FontAwesome name=\"remove\" id=\"removeIcon\" />\n                        </button>\n                    </div>\n\n                    <div className=\"title\">\n                        {this.state.editTitle ? \n                            <form \n                                id=\"list-form\"\n                                name=\"titleValue\"\n                                className=\"input-form\" \n                                onSubmit={this.handleSubmit} >\n                                <input \n                                    type=\"text\" \n                                    placeholder=\"Enter new title...\" \n                                    name=\"titleValue\" \n                                    maxLength=\"15\"\n                                    onChange={this.handleChangeValue}  \n                                    value={this.state.titleValue} />\n                                <button \n                                    type=\"submit\" \n                                    value=\"Submit\" \n                                    onClick={this.handleEditTitle}>\n                                    <FontAwesome\n                                        name=\"check\"\n                                    />\n                                </button>\n                            </form>\n                            :\n                            <h3>{this.state.title}</h3>\n                        }\n                        <button onClick={this.willEditTitle}>\n                            <FontAwesome name=\"edit\" id=\"editIcon\" />\n                        </button>\n                    </div>\n\n                    {todoList}\n                    \n                    {this.state.addActive ? \n                        <form \n                            id=\"task-form\"\n                            name=\"task\"\n                            className=\"input-form\" \n                            onSubmit={this.handleSubmit} >\n                            <input \n                                type=\"text\" \n                                placeholder=\"Enter new task...\" \n                                name=\"taskValue\" \n                                onChange={this.handleChangeValue}  \n                                value={this.state.taskValue} />\n                            <button \n                                type=\"submit\" \n                                value=\"Submit\" \n                                onClick={() => {\n                                    this.handleAddTask();\n                                    this.displayNewTask();}}>\n                                <FontAwesome\n                                    name=\"check\"\n                                />\n                            </button>\n                        </form>\n                        :\n                        null\n                    }\n                    \n                    <button className=\"add-task\" onClick={this.displayNewTask}>+ New Task</button>\n                </div>\n                }\n                </Spring>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}