{"ast":null,"code":"var _jsxFileName = \"/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/App.js\";\nimport React from 'react'; // import {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport * as Lists from './data/todoListData';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      lists: [],\n      addList: false\n    };\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.willAddList = this.willAddList.bind(this);\n    this.handleAddList = this.handleAddList.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  UNSAFE_componentWillMount() {\n    const taskLists = [];\n\n    for (const key in Lists) {\n      taskLists.push(Lists[key]);\n    }\n\n    this.setState({\n      lists: taskLists\n    });\n  }\n\n  handleChangeValue(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  willAddList() {\n    this.setState({\n      addList: true\n    });\n  }\n\n  handleAddList(list) {\n    this.setState(prevState => {\n      const addedEmpty = prevState.lists.concat({\n        name: list,\n        numTasks: 0,\n        data: []\n      });\n      return {\n        lists: addedEmpty,\n        addList: false\n      };\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const outputLists = this.state.lists.map(list => /*#__PURE__*/React.createElement(TaskList, {\n      key: list.name,\n      numTasks: list.numTasks,\n      data: list.data,\n      title: list.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    })); // array of components\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      handleAdd: this.willAddList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), this.state.addList ? /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleAddList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"list\",\n      placeholder: \"Enter name of new list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Submit\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bkgrnd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, outputLists)));\n  }\n\n}","map":{"version":3,"sources":["/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/App.js"],"names":["React","Header","TaskList","Lists","App","Component","constructor","props","state","value","lists","addList","handleChangeValue","bind","willAddList","handleAddList","handleSubmit","UNSAFE_componentWillMount","taskLists","key","push","setState","event","target","list","prevState","addedEmpty","concat","name","numTasks","data","preventDefault","render","outputLists","map"],"mappings":"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","sourcesContent":["import React from 'react';\n// import {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport * as Lists from './data/todoListData';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            lists: [],\n            addList: false,\n        }\n        this.handleChangeValue = this.handleChangeValue.bind(this);\n        this.willAddList = this.willAddList.bind(this);\n        this.handleAddList = this.handleAddList.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    UNSAFE_componentWillMount() {\n        const taskLists = [];\n\n        for (const key in Lists) {\n            taskLists.push(Lists[key]);\n        }\n\n        this.setState({\n            lists: taskLists,\n        });\n    }\n\n    handleChangeValue(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    willAddList() {\n        this.setState({\n            addList: true,\n        })\n    }\n\n    handleAddList(list) {\n        this.setState(prevState => {\n            const addedEmpty = prevState.lists.concat({\n                name: list,\n                numTasks: 0,\n                data: [],\n            });\n\n            return ({\n                lists: addedEmpty,\n                addList: false,\n            })\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    render() {\n        const outputLists = this\n                            .state\n                            .lists\n                            .map\n                            (list => \n                                <TaskList \n                                    key={list.name} \n                                    numTasks={list.numTasks} \n                                    data={list.data} \n                                    title={list.name} />); // array of components\n\n        return (\n            <div>\n                <Header handleAdd={this.willAddList}/>\n                {this.state.addList ? \n                    <form onSubmit={this.handleAddList}>\n                        <input type=\"text\" name=\"list\" placeholder=\"Enter name of new list\" />\n                        <button type=\"submit\" value=\"Submit\" >Submit</button>\n                    </form> \n                    :\n                    null}\n                <div className=\"bkgrnd\">\n                    <div className=\"task-view\">\n                        {outputLists}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}