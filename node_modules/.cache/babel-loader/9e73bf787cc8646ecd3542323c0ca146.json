{"ast":null,"code":"var _jsxFileName = \"/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/App.js\";\nimport React from 'react'; // import {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport TaskList from './components/TaskList'; // import * as Lists from './data/todoListData';    // fake data\n// import FontAwesome from 'react-fontawesome';\n\nimport './css/app.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      lists: []\n    };\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleAddList = this.handleAddList.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); // this.handleDeleteList = this.handleDeleteList.bind(this);\n  } // // load fake data\n  // UNSAFE_componentWillMount() {\n  //     const taskLists = [];\n  //     for (const key in Lists) {\n  //         taskLists.push(Lists[key]);\n  //     }\n  //     this.setState({\n  //         lists: taskLists,\n  //     });\n  // }\n\n\n  handleChangeValue(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleAddList() {\n    this.setState(prevState => {\n      const addedEmpty = prevState.lists.concat({\n        name: prevState.value,\n        numTasks: prevState.numTasks,\n        data: [],\n        editTitle: true\n      });\n      return {\n        value: '',\n        // lists: (prevState.value !== '' ? addedEmpty : prevState.lists),\n        lists: addedEmpty,\n        addList: true\n      };\n    });\n  } // handleDeleteList(list) {\n  //     this.setState(prevState => {\n  //         const listToBeRemoved = prevState.lists.indexOf(list);\n  //         console.log(listToBeRemoved);\n  //         const updatedList = prevState.lists.splice(listToBeRemoved, 1);\n  //         return ({\n  //             value: prevState.value,\n  //             lists: updatedList,\n  //         })\n  //     })\n  // }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const outputLists = this.state.lists.map(list => /*#__PURE__*/React.createElement(TaskList, {\n      key: list.name,\n      numTasks: list.numTasks,\n      data: list.data,\n      title: list.name,\n      editTitle: list.editTitle,\n      handleDelete: this.handleDeleteList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      handleAdd: this.handleAddList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bkgrnd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, outputLists)));\n  }\n\n}","map":{"version":3,"sources":["/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/App.js"],"names":["React","Header","TaskList","App","Component","constructor","props","state","value","lists","handleChangeValue","bind","handleAddList","handleSubmit","event","setState","target","prevState","addedEmpty","concat","name","numTasks","data","editTitle","addList","preventDefault","render","outputLists","map","list","handleDeleteList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;AACA;;AACA,OAAO,eAAP;AAGA,eAAe,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB,CARe,CASf;AACH,GAX4C,CAa7C;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAD,EAAAA,iBAAiB,CAACI,KAAD,EAAQ;AACrB,SAAKC,QAAL,CAAc;AAAEP,MAAAA,KAAK,EAAEM,KAAK,CAACE,MAAN,CAAaR;AAAtB,KAAd;AACH;;AAEDI,EAAAA,aAAa,GAAG;AACZ,SAAKG,QAAL,CAAcE,SAAS,IAAI;AACvB,YAAMC,UAAU,GAAGD,SAAS,CAACR,KAAV,CAAgBU,MAAhB,CAAuB;AACtCC,QAAAA,IAAI,EAAEH,SAAS,CAACT,KADsB;AAEtCa,QAAAA,QAAQ,EAAEJ,SAAS,CAACI,QAFkB;AAGtCC,QAAAA,IAAI,EAAE,EAHgC;AAItCC,QAAAA,SAAS,EAAE;AAJ2B,OAAvB,CAAnB;AAOA,aAAQ;AACJf,QAAAA,KAAK,EAAE,EADH;AAEJ;AACAC,QAAAA,KAAK,EAAES,UAHH;AAIJM,QAAAA,OAAO,EAAE;AAJL,OAAR;AAMH,KAdD;AAeH,GA9C4C,CAgD7C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEAX,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACW,cAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,KACCpB,KADD,CAECE,KAFD,CAGCmB,GAHD,CAICC,IAAI,iBACD,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACT,IADd;AAEI,MAAA,QAAQ,EAAES,IAAI,CAACR,QAFnB;AAGI,MAAA,IAAI,EAAEQ,IAAI,CAACP,IAHf;AAII,MAAA,KAAK,EAAEO,IAAI,CAACT,IAJhB;AAKI,MAAA,SAAS,EAAES,IAAI,CAACN,SALpB;AAMI,MAAA,YAAY,EAAE,KAAKO,gBANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAApB;AAcA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,KAAKlB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKe,WADL,CADJ,CAHJ,CADJ;AAWH;;AA3F4C","sourcesContent":["import React from 'react';\n// import {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\n// import * as Lists from './data/todoListData';    // fake data\n// import FontAwesome from 'react-fontawesome';\nimport './css/app.css'\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            lists: [],\n        }\n        this.handleChangeValue = this.handleChangeValue.bind(this);\n        this.handleAddList = this.handleAddList.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        // this.handleDeleteList = this.handleDeleteList.bind(this);\n    }\n\n    // // load fake data\n    // UNSAFE_componentWillMount() {\n    //     const taskLists = [];\n\n    //     for (const key in Lists) {\n    //         taskLists.push(Lists[key]);\n    //     }\n\n    //     this.setState({\n    //         lists: taskLists,\n    //     });\n    // }\n\n    handleChangeValue(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleAddList() {\n        this.setState(prevState => {\n            const addedEmpty = prevState.lists.concat({\n                name: prevState.value,\n                numTasks: prevState.numTasks,\n                data: [],\n                editTitle: true,\n            });\n\n            return ({\n                value: '',\n                // lists: (prevState.value !== '' ? addedEmpty : prevState.lists),\n                lists: addedEmpty,\n                addList: true,\n            })\n        });\n    }\n\n    // handleDeleteList(list) {\n    //     this.setState(prevState => {\n    //         const listToBeRemoved = prevState.lists.indexOf(list);\n    //         console.log(listToBeRemoved);\n    //         const updatedList = prevState.lists.splice(listToBeRemoved, 1);\n\n    //         return ({\n    //             value: prevState.value,\n    //             lists: updatedList,\n    //         })\n    //     })\n    // }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    render() {\n        const outputLists = this\n                            .state\n                            .lists\n                            .map\n                            (list => \n                                <TaskList \n                                    key={list.name} \n                                    numTasks={list.numTasks} \n                                    data={list.data} \n                                    title={list.name}\n                                    editTitle={list.editTitle}\n                                    handleDelete={this.handleDeleteList} />); \n\n\n        return (\n            <div>\n                <Header handleAdd={this.handleAddList}/>\n\n                <div className=\"bkgrnd\">\n                    <div className=\"task-view\">\n                        {outputLists}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}