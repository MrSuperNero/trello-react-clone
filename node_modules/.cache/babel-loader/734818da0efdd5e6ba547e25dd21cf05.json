{"ast":null,"code":"var _jsxFileName = \"/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/components/TaskList.js\";\nimport React from 'react';\nimport TodoItem from './TodoItem';\nimport FontAwesome from 'react-fontawesome';\nconst displayNewTask = React.forwardRef((props, ref) => {\n  /*#__PURE__*/\n  React.createElement(\"form\", {\n    name: \"task\",\n    ref: this.state.listKey,\n    className: \"new-input\",\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter new task...\",\n    name: \"task\",\n    onChange: this.handleChangeValue,\n    value: this.state.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"Submit\",\n    onClick: this.handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesome, {\n    className: \"super-crazy-colors\",\n    name: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  })));\n});\nexport default class TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listKey: this.props.id,\n      value: '',\n      numTasks: this.props.numTasks,\n      todos: this.props.data\n    };\n    this.handleComplete = this.handleComplete.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayNewTask = this.displayNewTask.bind(this);\n  }\n\n  handleComplete(id) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n      return {\n        todos: updatedTodos\n      };\n    });\n  }\n\n  handleChangeValue(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleAdd(task) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.concat({\n        id: prevState.numTasks + 1,\n        text: prevState.value,\n        completed: false\n      });\n      return {\n        value: '',\n        numTasks: prevState.numTasks + 1,\n        todos: updatedTodos\n      };\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const todoList = this.state.todos.map(task => /*#__PURE__*/React.createElement(TodoItem, {\n      key: task.id,\n      task: task,\n      handleChange: this.handleComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, this.props.title), todoList, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add-task\",\n      onClick: this.displayNewTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"+ Add Task\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/components/TaskList.js"],"names":["React","TodoItem","FontAwesome","displayNewTask","forwardRef","props","ref","state","listKey","handleSubmit","handleChangeValue","value","handleAdd","TaskList","Component","constructor","id","numTasks","todos","data","handleComplete","bind","setState","prevState","updatedTodos","map","todo","completed","event","target","task","concat","text","preventDefault","render","todoList","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoItem from './TodoItem';\nimport FontAwesome from 'react-fontawesome';\n\n\nconst displayNewTask = React.forwardRef((props, ref) => {\n    <form name=\"task\" ref={this.state.listKey} className=\"new-input\" onSubmit={this.handleSubmit} >\n        <input \n            type=\"text\" \n            placeholder=\"Enter new task...\" \n            name=\"task\" \n            onChange={this.handleChangeValue}  \n            value={this.state.value} />\n        <button type=\"submit\" value=\"Submit\" onClick={this.handleAdd}>\n            <FontAwesome\n                className=\"super-crazy-colors\"\n                name=\"check\"\n            />\n        </button>\n    </form>\n});\n\nexport default class TaskList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listKey: this.props.id,\n            value: '',\n            numTasks: this.props.numTasks,\n            todos: this.props.data,\n        }; \n        this.handleComplete = this.handleComplete.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleChangeValue = this.handleChangeValue.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.displayNewTask = this.displayNewTask.bind(this);\n    }\n\n    handleComplete(id) {\n        this.setState(prevState => {\n            const updatedTodos = prevState.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n\n                return todo;\n            });\n\n            return {\n                todos: updatedTodos,\n            };\n        });\n    }\n\n    handleChangeValue(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleAdd(task) {\n        this.setState(prevState => {\n            const updatedTodos = prevState.todos.concat({\n                id: prevState.numTasks + 1,\n                text: prevState.value,\n                completed: false,\n            });\n\n            return {\n                value: '',\n                numTasks: prevState.numTasks + 1,\n                todos: updatedTodos,\n            }\n        });\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n        \n\n    render() {\n        const todoList = this.state.todos.map(task => \n            <TodoItem \n                key={task.id} \n                task={task} \n                handleChange={this.handleComplete} \n            />);\n\n        return (\n            <div className=\"task-list\">\n                <h3>{this.props.title}</h3>\n                {todoList}\n                <button className=\"add-task\" onClick={this.displayNewTask}>+ Add Task</button>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}