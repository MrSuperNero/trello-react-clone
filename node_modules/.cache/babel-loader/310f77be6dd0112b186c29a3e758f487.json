{"ast":null,"code":"var _jsxFileName = \"/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/components/TaskList.js\";\nimport React from 'react';\nimport TodoItem from './TodoItem';\nimport FontAwesome from 'react-fontawesome';\nimport '../css/taskList.css';\nexport default class TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskValue: '',\n      title: this.props.title,\n      titleValue: this.props.title,\n      editTitle: false,\n      numTasks: this.props.numTasks,\n      todos: this.props.data,\n      addActive: false\n    };\n    this.handleComplete = this.handleComplete.bind(this);\n    this.handleAddTask = this.handleAddTask.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleEditTitle = this.handleEditTitle.bind(this);\n    this.willEditTitle = this.willEditTitle.bind(this);\n    this.doneEditTitle = this.doneEditTitle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayNewTask = this.displayNewTask.bind(this);\n  }\n\n  handleComplete(id) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n      return {\n        todos: updatedTodos\n      };\n    });\n  }\n\n  handleChangeValue(event) {\n    this.setState({\n      taskValue: event.target.value\n    });\n  }\n\n  willEditTitle() {\n    this.setState({\n      editTitle: true\n    });\n  }\n\n  handleEditTitle(event) {\n    this.setState({\n      titleValue: event.target.value\n    });\n  }\n\n  doneEditTitle() {\n    this.setState(prevState => {\n      return {\n        title: prevState.titleValue,\n        editTitle: false\n      };\n    });\n  }\n\n  handleAddTask(task) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.concat({\n        id: prevState.numTasks + 1,\n        text: prevState.taskValue,\n        completed: false\n      });\n      return {\n        taskValue: '',\n        title: prevState.title,\n        numTasks: prevState.numTasks + 1,\n        todos: updatedTodos,\n        addActive: prevState.addActive\n      };\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  displayNewTask() {\n    this.setState(prevState => {\n      return {\n        addActive: !prevState.addActive\n      };\n    });\n  }\n\n  render() {\n    const todoList = this.state.todos.map(task => /*#__PURE__*/React.createElement(TodoItem, {\n      key: task.id,\n      task: task,\n      handleChange: this.handleComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, this.state.editTitle ? /*#__PURE__*/React.createElement(\"form\", {\n      name: \"task\",\n      className: \"input-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter new title...\",\n      name: \"title\",\n      onChange: this.handleEditTitle,\n      value: this.state.titleValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.doneEditTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesome, {\n      name: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }))) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, this.state.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.willEditTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesome, {\n      name: \"edit\",\n      id: \"editIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }))), todoList, this.state.addActive ? /*#__PURE__*/React.createElement(\"form\", {\n      name: \"task\",\n      className: \"input-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter new task...\",\n      name: \"task\",\n      onChange: this.handleChangeValue,\n      value: this.state.taskValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: () => {\n        this.handleAddTask();\n        this.displayNewTask();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesome, {\n      name: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }))) : null, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add-task\",\n      onClick: this.displayNewTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \"+ New Task\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/mahdeenkhan/Documents/Programming/website-stuff/React/todo-app/src/components/TaskList.js"],"names":["React","TodoItem","FontAwesome","TaskList","Component","constructor","props","state","taskValue","title","titleValue","editTitle","numTasks","todos","data","addActive","handleComplete","bind","handleAddTask","handleChangeValue","handleEditTitle","willEditTitle","doneEditTitle","handleSubmit","displayNewTask","id","setState","prevState","updatedTodos","map","todo","completed","event","target","value","task","concat","text","preventDefault","render","todoList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAO,qBAAP;AAGA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAFT;AAGTC,MAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWG,KAHd;AAITE,MAAAA,SAAS,EAAE,KAJF;AAKTC,MAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWM,QALZ;AAMTC,MAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,IANT;AAOTC,MAAAA,SAAS,EAAE;AAPF,KAAb;AASA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKI,aAAL,GAAqB,KAAKA,aAAL,CAAmBJ,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKK,aAAL,GAAqB,KAAKA,aAAL,CAAmBL,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKM,YAAL,GAAoB,KAAKA,YAAL,CAAkBN,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKO,cAAL,GAAsB,KAAKA,cAAL,CAAoBP,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDD,EAAAA,cAAc,CAACS,EAAD,EAAK;AACf,SAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,YAAMC,YAAY,GAAGD,SAAS,CAACd,KAAV,CAAgBgB,GAAhB,CAAoBC,IAAI,IAAI;AAC7C,YAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;AAChBK,UAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACH;;AAED,eAAOD,IAAP;AACH,OANoB,CAArB;AAQA,aAAO;AACHjB,QAAAA,KAAK,EAAEe;AADJ,OAAP;AAGH,KAZD;AAaH;;AAEDT,EAAAA,iBAAiB,CAACa,KAAD,EAAQ;AACrB,SAAKN,QAAL,CAAc;AAAElB,MAAAA,SAAS,EAAEwB,KAAK,CAACC,MAAN,CAAaC;AAA1B,KAAd;AACH;;AAEDb,EAAAA,aAAa,GAAG;AACZ,SAAKK,QAAL,CAAc;AACVf,MAAAA,SAAS,EAAE;AADD,KAAd;AAGH;;AAEDS,EAAAA,eAAe,CAACY,KAAD,EAAQ;AACnB,SAAKN,QAAL,CAAc;AACVhB,MAAAA,UAAU,EAAEsB,KAAK,CAACC,MAAN,CAAaC;AADf,KAAd;AAGH;;AAEDZ,EAAAA,aAAa,GAAG;AACZ,SAAKI,QAAL,CAAcC,SAAS,IAAI;AACvB,aAAO;AACHlB,QAAAA,KAAK,EAAEkB,SAAS,CAACjB,UADd;AAEHC,QAAAA,SAAS,EAAE;AAFR,OAAP;AAIH,KALD;AAMH;;AAGDO,EAAAA,aAAa,CAACiB,IAAD,EAAO;AAChB,SAAKT,QAAL,CAAcC,SAAS,IAAI;AACvB,YAAMC,YAAY,GAAGD,SAAS,CAACd,KAAV,CAAgBuB,MAAhB,CAAuB;AACxCX,QAAAA,EAAE,EAAEE,SAAS,CAACf,QAAV,GAAqB,CADe;AAExCyB,QAAAA,IAAI,EAAEV,SAAS,CAACnB,SAFwB;AAGxCuB,QAAAA,SAAS,EAAE;AAH6B,OAAvB,CAArB;AAMA,aAAO;AACHvB,QAAAA,SAAS,EAAE,EADR;AAEHC,QAAAA,KAAK,EAAEkB,SAAS,CAAClB,KAFd;AAGHG,QAAAA,QAAQ,EAAEe,SAAS,CAACf,QAAV,GAAqB,CAH5B;AAIHC,QAAAA,KAAK,EAAEe,YAJJ;AAKHb,QAAAA,SAAS,EAAEY,SAAS,CAACZ;AALlB,OAAP;AAOH,KAdD;AAeH;;AAEDQ,EAAAA,YAAY,CAACS,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACM,cAAN;AACH;;AAEDd,EAAAA,cAAc,GAAG;AACb,SAAKE,QAAL,CAAcC,SAAS,IAAI;AACvB,aAAO;AACHZ,QAAAA,SAAS,EAAE,CAACY,SAAS,CAACZ;AADnB,OAAP;AAGH,KAJD;AAKH;;AAEDwB,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKjC,KAAL,CAAWM,KAAX,CAAiBgB,GAAjB,CAAqBM,IAAI,iBACtC,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACV,EADd;AAEI,MAAA,IAAI,EAAEU,IAFV;AAGI,MAAA,YAAY,EAAE,KAAKnB,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAjB;AAOA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,KAAL,CAAWI,SAAX,gBACG;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,QAAQ,EAAE,KAAKY,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,oBAFhB;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,QAAQ,EAAE,KAAKH,eAJnB;AAKI,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWG,UALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAUI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAC,QAFV;AAGI,MAAA,OAAO,EAAE,KAAKY,aAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAVJ,CADH,gBAqBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKf,KAAL,CAAWE,KAAhB,CAtBR,eAwBI;AAAQ,MAAA,OAAO,EAAE,KAAKY,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,EAAE,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAxBJ,CAFJ,EA+BKmB,QA/BL,EAiCK,KAAKjC,KAAL,CAAWQ,SAAX,gBACG;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,QAAQ,EAAE,KAAKQ,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,mBAFhB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,QAAQ,EAAE,KAAKJ,iBAJnB;AAKI,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,SALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAUI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAC,QAFV;AAGI,MAAA,OAAO,EAAE,MAAM;AACX,aAAKU,aAAL;AACA,aAAKM,cAAL;AAAuB,OAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAVJ,CADH,GAuBG,IAxDR,eA0DI;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAE,KAAKA,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1DJ,CADJ;AA8DH;;AApKiD","sourcesContent":["import React from 'react';\nimport TodoItem from './TodoItem';\nimport FontAwesome from 'react-fontawesome';\nimport '../css/taskList.css'\n\n\nexport default class TaskList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskValue: '',\n            title: this.props.title,\n            titleValue: this.props.title,\n            editTitle: false,\n            numTasks: this.props.numTasks,\n            todos: this.props.data,\n            addActive: false,\n        }; \n        this.handleComplete = this.handleComplete.bind(this);\n        this.handleAddTask = this.handleAddTask.bind(this);\n        this.handleChangeValue = this.handleChangeValue.bind(this);\n        this.handleEditTitle = this.handleEditTitle.bind(this);\n        this.willEditTitle = this.willEditTitle.bind(this);\n        this.doneEditTitle = this.doneEditTitle.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.displayNewTask = this.displayNewTask.bind(this);\n    }\n\n    handleComplete(id) {\n        this.setState(prevState => {\n            const updatedTodos = prevState.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n\n                return todo;\n            });\n\n            return {\n                todos: updatedTodos,\n            };\n        });\n    }\n\n    handleChangeValue(event) {\n        this.setState({ taskValue: event.target.value });\n    }\n\n    willEditTitle() {\n        this.setState({\n            editTitle: true,\n        });\n    }\n\n    handleEditTitle(event) {\n        this.setState({ \n            titleValue: event.target.value,\n        });\n    }\n\n    doneEditTitle() {\n        this.setState(prevState => {\n            return {\n                title: prevState.titleValue,\n                editTitle: false,\n            }\n        });\n    }\n\n\n    handleAddTask(task) {\n        this.setState(prevState => {\n            const updatedTodos = prevState.todos.concat({\n                id: prevState.numTasks + 1,\n                text: prevState.taskValue,\n                completed: false,\n            });\n\n            return {\n                taskValue: '',\n                title: prevState.title,\n                numTasks: prevState.numTasks + 1,\n                todos: updatedTodos,\n                addActive: prevState.addActive,\n            }\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    displayNewTask() {\n        this.setState(prevState => {\n            return {\n                addActive: !prevState.addActive,\n            }\n        })\n    }\n\n    render() {\n        const todoList = this.state.todos.map(task => \n            <TodoItem \n                key={task.id} \n                task={task} \n                handleChange={this.handleComplete} \n            />);\n\n        return (\n            <div className=\"task-list\">\n\n                <div className=\"title\">\n                    {this.state.editTitle ? \n                        <form \n                            name=\"task\"\n                            className=\"input-form\" \n                            onSubmit={this.handleSubmit} >\n                            <input \n                                type=\"text\" \n                                placeholder=\"Enter new title...\" \n                                name=\"title\" \n                                onChange={this.handleEditTitle}  \n                                value={this.state.titleValue} />\n                            <button \n                                type=\"submit\" \n                                value=\"Submit\" \n                                onClick={this.doneEditTitle}>\n                                <FontAwesome\n                                    name=\"check\"\n                                />\n                            </button>\n                        </form>\n                        :\n                        <h3>{this.state.title}</h3>\n                    }\n                    <button onClick={this.willEditTitle}>\n                        <FontAwesome name=\"edit\" id=\"editIcon\" />\n                    </button>\n                </div>\n\n                {todoList}\n                \n                {this.state.addActive ? \n                    <form \n                        name=\"task\"\n                        className=\"input-form\" \n                        onSubmit={this.handleSubmit} >\n                        <input \n                            type=\"text\" \n                            placeholder=\"Enter new task...\" \n                            name=\"task\" \n                            onChange={this.handleChangeValue}  \n                            value={this.state.taskValue} />\n                        <button \n                            type=\"submit\" \n                            value=\"Submit\" \n                            onClick={() => {\n                                this.handleAddTask();\n                                this.displayNewTask();}}>\n                            <FontAwesome\n                                name=\"check\"\n                            />\n                        </button>\n                    </form>\n                    :\n                    null\n                }\n                <button className=\"add-task\" onClick={this.displayNewTask}>+ New Task</button>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}